{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","newMovie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","movie","imdbID","loadData","query","a","fetch","data","json","FindMovie","onAdd","useState","setNewMovie","setQuery","isCorrect","setIsCorrect","unpackMovies","movieFromServer","Response","imdbUrl","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","App","setMovies","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4841f45.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  newMovie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { newMovie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={newMovie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{newMovie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {newMovie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          newMovie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=304877e5';\n\nexport const loadData = async (query: string) => {\n  const data = await fetch(`${API_URL}&t=${query}`);\n\n  return data.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { loadData } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [isCorrect, setIsCorrect] = useState(true);\n\n  const addQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setIsCorrect(true);\n  };\n\n  const unpackMovies = async () => {\n    const movieFromServer: Movie = await loadData(query);\n\n    if (movieFromServer.Response === 'False') {\n      setNewMovie(null);\n      setIsCorrect(false);\n\n      return;\n    }\n\n    setNewMovie({\n      Title: movieFromServer.Title,\n      Plot: movieFromServer.Plot,\n      Poster: movieFromServer.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}/`,\n      imdbID: movieFromServer.imdbID,\n    });\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={addQuery}\n            />\n          </div>\n\n          {isCorrect\n            || (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={unpackMovies}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!newMovie}\n              onClick={() => {\n                onAdd(newMovie as Movie);\n                setNewMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie\n          && <MovieCard newMovie={newMovie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n// import { loadData } from './api/api';\n\n// interface State {\n//   movies: Movie[];\n// }\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[] >([]);\n\n  const addToMovies = (newMovie: Movie) => {\n    if (!movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addToMovies} />\n      </div>\n    </div>\n  );\n};\n\n// export class App extends Component<{}, State> {\n//   state: State = {\n//     movies: [],\n//   };\n\n//   render() {\n//     const { movies } = this.state;\n\n//     return (\n//       <div className=\"page\">\n//         <div className=\"page-content\">\n//           <MoviesList movies={movies} />\n//         </div>\n//         <div className=\"sidebar\">\n//           <FindMovie />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}